;; === Whamm Hotness Monitor ===
;; Instrument EVERY location in the application and track each
;; time it is executed dynamically with an in-memory counter.

;; --> Output format: <fid>, pc=<pc>, [<counter>]

(module
    (import "wizeng" "puti" (func $puti (param i32)))
    (import "wizeng" "puts" (func $puts (param i32 i32)))

    (memory (export "mem") 2)   ;; no expansion checks
    (global $icount (mut i32) (i32.const 0))

    (data (i32.const 0) "\nicount=")

    (func $flush
        (call $puts (i32.const 0) (i32.const 8))
        (call $puti (global.get $icount))
        (call $puts (i32.const 0) (i32.const 1))
        (call $puts (i32.const 0) (i32.const 1))
    )
    (func (export "wasm:opcode:unreachable")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:nop")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:block")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:loop")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:if")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:else")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:try")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:catch")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:throw")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:rethrow")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:throw_ref")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:end")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:br")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:br_if")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:br_table")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:return")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:call")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:call_indirect")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:return_call")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:return_call_indirect")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:call_ref")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:return_call_ref")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:delegate")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:catch_all")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:drop")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:select")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:try_table")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:local.get")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:local.set")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:local.tee")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:global.get")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:global.set")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:table.get")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:table.set")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.load")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.load")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.load")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.load")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.load8_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.load8_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.load16_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.load16_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.load8_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.load8_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.load16_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.load16_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.load32_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.load32_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.store")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.store")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.store")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.store")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.store8")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.store16")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.store8")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.store16")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.store32")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:memory.size")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:memory.grow")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.const")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.const")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.const")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.const")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.eqz")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.eq")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.ne")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.lt_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.lt_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.gt_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.gt_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.le_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.le_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.ge_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.ge_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.eqz")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.eq")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.ne")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.lt_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.lt_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.gt_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.gt_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.le_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.le_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.ge_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.ge_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.eq")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.ne")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.lt")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.gt")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.le")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.ge")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.eq")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.ne")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.lt")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.gt")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.le")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.ge")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.clz")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.ctz")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.popcnt")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.add")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.sub")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.mul")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.div_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.div_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.rem_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.rem_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.and")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.or")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.xor")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.shl")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.shr_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.shr_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.rotl")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.rotr")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.clz")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.ctz")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.popcnt")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.add")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.sub")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.mul")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.div_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.div_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.rem_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.rem_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.and")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.or")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.xor")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.shl")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.shr_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.shr_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.rotl")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.rotr")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.abs")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.neg")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.ceil")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.floor")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.trunc")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.nearest")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.sqrt")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.add")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.sub")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.mul")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.div")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.min")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.max")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.copysign")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.abs")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.neg")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.ceil")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.floor")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.trunc")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.nearest")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.sqrt")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.add")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.sub")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.mul")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.div")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.min")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.max")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.copysign")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.wrap_i64")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.trunc_f32_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.trunc_f32_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.trunc_f64_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.trunc_f64_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.extend_i32_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.extend_i32_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.trunc_f32_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.trunc_f32_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.trunc_f64_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.trunc_f64_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.convert_i32_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.convert_i32_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.convert_i64_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.convert_i64_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.demote_f64")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.convert_i32_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.convert_i32_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.convert_i64_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.convert_i64_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.promote_f32")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.reinterpret_f32")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.reinterpret_f64")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32.reinterpret_i32")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64.reinterpret_i64")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.extend8_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.extend16_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.extend8_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.extend16_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.extend32_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:ref.null")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:ref.is_null")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:ref.func")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:ref.eq")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:ref.as_non_null")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:br_on_null")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:br_on_non_null")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:struct.new")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:struct.new_default")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:struct.get")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:struct.get_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:struct.get_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:struct.set")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:array.new")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:array.new_default")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:array.new_fixed")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:array.new_data")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:array.new_elem")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:array.get")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:array.get_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:array.get_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:array.set")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:array.len")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:array.fill")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:array.copy")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:array.init_data")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:array.init_elem")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:ref.test")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:ref.test null")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:ref.cast")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:ref.cast null")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:br_on_cast")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:br_on_cast_fail")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:any.convert_extern")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:extern.convert_any")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:ref.i31")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i31.get_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i31.get_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.trunc_sat_f32_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.trunc_sat_f32_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.trunc_sat_f64_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.trunc_sat_f64_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.trunc_sat_f32_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.trunc_sat_f32_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.trunc_sat_f64_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.trunc_sat_f64_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:memory.init")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:data.drop")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:memory.copy")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:memory.fill")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:table.init")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:elem.drop")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:table.copy")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:table.grow")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:table.size")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:table.fill")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.load")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.load_8x8_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.load_8x8_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.load_16x4_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.load_16x4_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.load_32x2_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.load_32x2_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.load_8_splat")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.load_16_splat")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.load_32_splat")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.load_64_splat")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.load_32_zero")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.load_64_zero")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.store")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.load_8_lane")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.load_16_lane")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.load_32_lane")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.load_64_lane")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.store_8_lane")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.store_16_lane")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.store_32_lane")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.store_64_lane")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.const")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.shuffle")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.extractlane_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.extractlane_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.replacelane")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.extractlane_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.extractlane_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.replacelane")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.extractlane")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.replacelane")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.extractlane")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.replacelane")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.extractlane")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.replacelane")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.extractlane")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.replacelane")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.swizzle")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.splat")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.splat")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.splat")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.splat")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.splat")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.splat")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.eq")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.ne")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.lt_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.lt_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.gt_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.gt_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.le_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.le_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.ge_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.ge_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.eq")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.ne")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.lt_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.lt_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.gt_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.gt_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.le_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.le_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.ge_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.ge_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.eq")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.ne")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.lt_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.lt_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.gt_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.gt_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.le_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.le_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.ge_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.ge_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.eq")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.ne")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.lt_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.gt_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.le_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.ge_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.eq")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.ne")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.lt")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.gt")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.le")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.ge")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.eq")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.ne")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.lt")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.gt")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.le")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.ge")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.not")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.and")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.andnot")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.or")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.xor")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.bitselect")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:v128.anytrue")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.abs")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.neg")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.popcnt")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.alltrue")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.bitmask")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.narrow_i16x8_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.narrow_i16x8_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.shl")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.shr_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.shr_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.add")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.add_sat_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.add_sat_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.sub")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.sub_sat_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.sub_sat_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.min_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.min_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.max_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.max_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i8x16.avgr_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.extaddpairwise_i8x16_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.extaddpairwise_i8x16_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.abs")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.neg")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.q15mulrsat_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.alltrue")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.bitmask")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.narrow_i32x4_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.narrow_i32x4_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.extend_low_i8x16_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.extend_high_i8x16_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.extend_low_i8x16_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.extend_high_i8x16_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.shl")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.shr_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.shr_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.add")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.add_sat_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.add_sat_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.sub")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.sub_sat_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.sub_sat_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.mul")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.min_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.min_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.max_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.max_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.avgr_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.extmul_low_i8x16_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.extmul_high_i8x16_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.extmul_low_i8x16_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i16x8.extmul_high_i8x16_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.extaddpairwise_i16x8_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.extaddpairwise_i16x8_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.abs")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.neg")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.alltrue")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.bitmask")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.extend_low_i16x8_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.extend_high_i16x8_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.extend_low_i16x8_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.extend_high_i16x8_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.shl")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.shr_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.shr_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.add")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.sub")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.mul")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.min_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.min_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.max_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.max_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.dot_i16x8_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.extmul_low_i16x8_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.extmul_high_i16x8_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.extmul_low_i16x8_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.extmul_high_i16x8_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.abs")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.neg")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.alltrue")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.bitmask")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.extend_low_i32x4_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.extend_high_i32x4_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.extend_low_i32x4_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.extend_high_i32x4_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.shl")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.shr_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.shr_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.add")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.sub")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.mul")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.extmul_low_i32x4_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.extmul_high_i32x4_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.extmul_low_i32x4_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64x2.extmul_high_i32x4_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.ceil")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.floor")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.trunc")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.nearest")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.abs")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.neg")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.sqrt")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.add")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.sub")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.mul")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.div")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.min")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.max")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.pmin")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.pmax")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.ceil")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.floor")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.trunc")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.nearest")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.abs")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.neg")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.sqrt")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.add")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.sub")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.mul")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.div")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.min")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.max")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.pmin")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.pmax")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.trunc_sat_f32x4_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.trunc_sat_f32x4_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.convert_i32x4_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.convert_i32x4_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.trunc_sat_f64x2_s_zero")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32x4.trunc_sat_f64x2_u_zero")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.convert_low_i32x4_s")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.convert_low_i32x4_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f32x4.demote_f64x2_zero")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:f64x2.promote_low_f32x4")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:memory.atomic.notify")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:memory.atomic.wait32")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:memory.atomic.wait64")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:atomic.fence")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.load")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.load")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.load8_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.load16_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.load8_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.load16_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.load32_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.store")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.store")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.store8")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.store16")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.store8")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.store16")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.store32")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.rmw.add")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw.add")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.rmw8.add_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.rmw16.add_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw8.add_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw16.add_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw32.add_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.rmw.sub")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw.sub")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.rmw8.sub_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.rmw16.sub_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw8.sub_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw16.sub_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw32.sub_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.rmw.and")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw.and")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.rmw8.and_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.rmw16.and_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw8.and_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw16.and_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw32.and_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.rmw.or")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw.or")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.rmw8.or_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.rmw16.or_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw8.or_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw16.or_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw32.or_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.rmw.xor")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw.xor")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.rmw8.xor_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.rmw16.xor_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw8.xor_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw16.xor_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw32.xor_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.rmw.xchg")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw.xchg")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.rmw8.xchg_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.rmw16.xchg_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw8.xchg_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw16.xchg_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw32.xchg_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.rmw.cmpxchg")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw.cmpxchg")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.rmw8.cmpxchg_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i32.atomic.rmw16.cmpxchg_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw8.cmpxchg_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw16.cmpxchg_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:i64.atomic.rmw32.cmpxchg_u")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:cont.new")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:cont.bind")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:suspend")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:resume")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
    (func (export "wasm:opcode:resume.throw")
        (global.set $icount (i32.add (global.get $icount) (i32.const 1)))
    )
)
