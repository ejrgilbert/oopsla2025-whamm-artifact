(module
    (import "wizeng" "puti" (func $puti (param i32)))
    (import "wizeng" "puts" (func $puts (param i32 i32)))
    (import "cache" "check_access" (func $check_access (;18;) (param i32 i32) (result i32)))

    (global $hits (mut i32) (i32.const 0))
    (global $misses (mut i32) (i32.const 0))

    (func (export "wasm:exit")
        ;; print header
        (call $puts (i32.const 15) (i32.const 20))

        ;; print hits
        (call $puts (i32.const 0) (i32.const 6)) ;; 'hits: '
        (call $puti (global.get $hits))
        (call $puts (i32.const 14) (i32.const 1)) ;; '\n'

        ;; print misses
        (call $puts (i32.const 6) (i32.const 8)) ;; 'misses: '
        (call $puti (global.get $misses))
        (call $puts (i32.const 14) (i32.const 1)) ;; '\n'
    )

    (func (export "wasm:opcode:i32.load (arg0, imm1)") (param $addr i32) (param $offset i32)
        (call $check_cache (local.get $addr) (local.get $offset) (i32.const 4))
    )
    (func (export "wasm:opcode:i64.load (arg0, imm1)") (param $addr i32) (param $offset i32)
        (call $check_cache (local.get $addr) (local.get $offset) (i32.const 8))
    )
    (func (export "wasm:opcode:f32.load (arg0, imm1)") (param $addr i32) (param $offset i32)
        (call $check_cache (local.get $addr) (local.get $offset) (i32.const 4))
    )
    (func (export "wasm:opcode:f64.load (arg0, imm1)") (param $addr i32) (param $offset i32)
        (call $check_cache (local.get $addr) (local.get $offset) (i32.const 8))
    )
    (func (export "wasm:opcode:i32.load8_s (arg0, imm1)") (param $addr i32) (param $offset i32)
        (call $check_cache (local.get $addr) (local.get $offset) (i32.const 4))
    )
    (func (export "wasm:opcode:i32.load8_u (arg0, imm1)") (param $addr i32) (param $offset i32)
        (call $check_cache (local.get $addr) (local.get $offset) (i32.const 1))
    )
    (func (export "wasm:opcode:i32.load16_s (arg0, imm1)") (param $addr i32) (param $offset i32)
        (call $check_cache (local.get $addr) (local.get $offset) (i32.const 2))
    )
    (func (export "wasm:opcode:i32.load16_u (arg0, imm1)") (param $addr i32) (param $offset i32)
        (call $check_cache (local.get $addr) (local.get $offset) (i32.const 2))
    )
    (func (export "wasm:opcode:i64.load8_s (arg0, imm1)") (param $addr i32) (param $offset i32)
        (call $check_cache (local.get $addr) (local.get $offset) (i32.const 1))
    )
    (func (export "wasm:opcode:i64.load8_u (arg0, imm1)") (param $addr i32) (param $offset i32)
        (call $check_cache (local.get $addr) (local.get $offset) (i32.const 1))
    )
    (func (export "wasm:opcode:i64.load16_s (arg0, imm1)") (param $addr i32) (param $offset i32)
        (call $check_cache (local.get $addr) (local.get $offset) (i32.const 2))
    )
    (func (export "wasm:opcode:i64.load16_u (arg0, imm1)") (param $addr i32) (param $offset i32)
        (call $check_cache (local.get $addr) (local.get $offset) (i32.const 2))
    )
    (func (export "wasm:opcode:i64.load32_s (arg0, imm1)") (param $addr i32) (param $offset i32)
        (call $check_cache (local.get $addr) (local.get $offset) (i32.const 4))
    )
    (func (export "wasm:opcode:i64.load32_u (arg0, imm1)") (param $addr i32) (param $offset i32)
        (call $check_cache (local.get $addr) (local.get $offset) (i32.const 4))
    )
    (func (export "wasm:opcode:i32.store (arg1, imm1)") (param $addr i32) (param $offset i32)
        (call $check_cache (local.get $addr) (local.get $offset) (i32.const 4))
    )
    (func (export "wasm:opcode:i64.store (arg1, imm1)") (param $addr i32) (param $offset i32)
        (call $check_cache (local.get $addr) (local.get $offset) (i32.const 8))
    )
    (func (export "wasm:opcode:f32.store (arg1, imm1)") (param $addr i32) (param $offset i32)
        (call $check_cache (local.get $addr) (local.get $offset) (i32.const 4))
    )
    (func (export "wasm:opcode:f64.store (arg1, imm1)") (param $addr i32) (param $offset i32)
        (call $check_cache (local.get $addr) (local.get $offset) (i32.const 8))
    )
    (func (export "wasm:opcode:i32.store8 (arg1, imm1)") (param $addr i32) (param $offset i32)
        (call $check_cache (local.get $addr) (local.get $offset) (i32.const 1))
    )
    (func (export "wasm:opcode:i32.store16 (arg1, imm1)") (param $addr i32) (param $offset i32)
        (call $check_cache (local.get $addr) (local.get $offset) (i32.const 2))
    )
    (func (export "wasm:opcode:i64.store8 (arg1, imm1)") (param $addr i32) (param $offset i32)
        (call $check_cache (local.get $addr) (local.get $offset) (i32.const 1))
    )
    (func (export "wasm:opcode:i64.store16 (arg1, imm1)") (param $addr i32) (param $offset i32)
        (call $check_cache (local.get $addr) (local.get $offset) (i32.const 2))
    )
    (func (export "wasm:opcode:i64.store32 (arg1, imm1)") (param $addr i32) (param $offset i32)
        (call $check_cache (local.get $addr) (local.get $offset) (i32.const 4))
    )

    (func $check_cache (param $addr i32) (param $offset i32) (param $num_bytes i32)
        (local $effective_addr i32) (local $result i32) (local $num_hits i32) (local $num_misses i32)

        (call $check_access (i32.add (local.get $addr) (local.get $offset)) (local.get $num_bytes))
        local.set $result

        (local.set $num_hits (i32.shr_s (i32.and (local.get $result) (i32.const 0xFFFF0000)) (i32.const 16)))
        (local.set $num_misses (i32.and (local.get $result) (i32.const 0x0000FFFF)))

        (global.set $hits (i32.add (global.get $hits) (local.get $num_hits)))
        (global.set $misses (i32.add (global.get $misses) (local.get $num_misses)))
    )

    (memory (;0;) (export "memory") 1)
    (data (;0;) (i32.const 0) "hits: ")
    (data (;1;) (i32.const 6) "misses: ")
    (data (;2;) (i32.const 14) "\0a")
    (data (;3;) (i32.const 15) "\0a===== FLUSH =====\0a")
)